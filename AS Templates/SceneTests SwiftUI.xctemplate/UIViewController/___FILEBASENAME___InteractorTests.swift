//
//  ___FILENAME___
//  ___PROJECTNAME___
//
//  Created by ___FULLUSERNAME___ on ___DATE___.
//  Copyright (c) ___YEAR___ ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Atelier Socle Xcode Templates
//

import XCTest
@testable import ___VARIABLE_sceneName___

final class ___VARIABLE_sceneName___InteractorTests: XCTestCase {

    // MARK: Properties

    private var interactor: ___VARIABLE_sceneName___Interactor!
    private var nameFetched: String?
    private var expectation: XCTestExpectation?

    // MARK: Life Cycle

    override func setUp() {
        super.setUp()
        interactor = ___VARIABLE_sceneName___Interactor(presenter: self)
    }

    override func tearDown() {
        super.tearDown()
        nameFetched = nil
    }

}

// MARK: - Events

extension ___VARIABLE_sceneName___InteractorTests {

    func testSubscribe() {
        interactor.subscribe()
    }

    func testUnsubscribe() {
        interactor.unsubscribe()
    }

}

// MARK: - ___VARIABLE_sceneName___InteractorLogic

extension ___VARIABLE_sceneName___InteractorTests {

    func testFetchNewName() {
        expectation = self.expectation(description: "did expect new name")
        interactor.fetchName()
        wait(for: [expectation!], timeout: 5)
        XCTAssertNotNil(nameFetched)
    }

}

// MARK: - ___VARIABLE_sceneName___InteractorDelegate

extension ___VARIABLE_sceneName___InteractorTests: ___VARIABLE_sceneName___InteractorDelegate {

    func didFetch(name: String) {
        self.nameFetched = name
        expectation?.fulfill()
    }

}
