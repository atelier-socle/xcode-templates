//
//  ___VARIABLE_sceneName___ViewModel.swift
//  Sample
//
//  Created by Tom Baranes on 30/03/2020.
//  Copyright (c) 2020 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Atelier Socle Xcode Templates
//

import Foundation

/// view model
final class ___VARIABLE_sceneName___ViewModel: NSObject {

    // MARK: Localizables

    #warning("use L10n instead of hardcoding string")
    let navigationBarTitle = "L10n.___VARIABLE_sceneName___.NavigationBar.title"
    let fetchNameButton = "Fetch name"

    // MARK: Properties

    private(set) var isLoading = false

    // MARK: Observable Properties

    @objc private(set) dynamic var names = [String]()
    @objc private(set) dynamic var selectedName: String?

    // swiftlint:disable:next line_length
    let randomStringUrl = "https://www.random.org/strings/?num=1&len=10&upperalpha=on&loweralpha=on&unique=off&format=plain"

    // MARK: Life Cycle

    init(names: [String] = []) {
        self.names = names
        super.init()
    }

}

// MARK: Requests

extension ___VARIABLE_sceneName___ViewModel {

    func fetchNewName() {
        isLoading = true
        names.append("Loading...")
        sendRequestNewName { [weak self] name in
            self?.didFetch(name: name)
        }
    }

    private func sendRequestNewName(completion: @escaping (String) -> Void) {
        DispatchQueue.global(qos: .background).async { [unowned self] in
            let url = URL(string: self.randomStringUrl)!
            let name = try! String(contentsOf: url)
            DispatchQueue.main.async {
                completion(name)
            }
        }
    }

    private func didFetch(name: String) {
        isLoading = false
        let nameIndex = names.firstIndex { $0 == "Loading..." }
        guard let index = nameIndex else {
            return
        }

        names.remove(at: index)
        names.insert(name, at: index)
    }

}

// MARK: - ___VARIABLE_sceneName___TableViewDataSourceDelegate

extension ___VARIABLE_sceneName___ViewModel: ___VARIABLE_sceneName___TableViewDataSourceDelegate {

    var cellDelegate: ___VARIABLE_sceneName___TableViewCellDelegate {
        self
    }

}

// MARK: - ___VARIABLE_sceneName___TableViewDelegateLogic

extension ___VARIABLE_sceneName___ViewModel: ___VARIABLE_sceneName___TableViewDelegateLogic {

    func didSelectRow(at indexPath: IndexPath) {
        selectedName = names[indexPath.row]
    }

}

// MARK: - Actions

extension ___VARIABLE_sceneName___ViewModel: ___VARIABLE_sceneName___TableViewCellDelegate {

    func executeButton() {
        print("button pressed")
    }

}
