//
//  ___VARIABLE_sceneName___TableViewCellTests.swift
//  Sample
//
//  Created by Tom Baranes on 30/03/2020.
//  Copyright (c) 2020 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Atelier Socle Xcode Templates
//

import XCTest
import SwiftyUtils
@testable import Sample_iOS

final class ___VARIABLE_sceneName___TableViewCellTests: XCTestCase {

    // MARK: IBOutlets

    private var titleLabel: UILabel!
    private var button: UIButton!
    private var cell: ___VARIABLE_sceneName___TableViewCell!

    // MARK: Properties

    // swiftlint:disable:next weak_delegate
    private var delegate: Mock___VARIABLE_sceneName___TableViewCellDelegate!

    // MARK: Life Cycle

    override func setUp() {
        super.setUp()
        delegate = Mock___VARIABLE_sceneName___TableViewCellDelegate()

        let tableView = UITableView()
        tableView.register(cellType: ___VARIABLE_sceneName___TableViewCell.self)
        cell = tableView.dequeueReusableCell(for: IndexPath(row: 0, section: 0))
        configureOutlets()
    }

    override func tearDown() {
        super.tearDown()
    }

    private func configureOutlets() {
        titleLabel = cell.findView(forIdentifier: ___VARIABLE_sceneName___Accessibility.titleLabel.rawValue) as? UILabel
        button = cell.findView(forIdentifier: ___VARIABLE_sceneName___Accessibility.button.rawValue) as? UIButton
    }

}

// MARK: - Default Configuration

extension ___VARIABLE_sceneName___TableViewCellTests {

    func testStaticValues() {
        XCTAssertNotNil(___VARIABLE_sceneName___TableViewCell.nib)
    }

    func testDefaultConfiguration() {
        XCTAssertFalse(button.allTargets.isEmpty)
    }

}

// MARK: - Bind

extension ___VARIABLE_sceneName___TableViewCellTests {

    func testBind() {
        cell.bind("name", delegate: delegate)
        XCTAssertEqual(titleLabel.text, "name")

    }

}

// MARK: - Actions

extension ___VARIABLE_sceneName___TableViewCellTests {

    func testButtonPressed() {
        cell.bind("name", delegate: delegate)
        button.sendActions(for: .touchUpInside)
        XCTAssertTrue(delegate.didExecuteButton)
    }

}
