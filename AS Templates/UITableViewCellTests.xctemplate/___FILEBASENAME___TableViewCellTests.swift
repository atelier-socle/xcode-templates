//
//  ___FILENAME___
//  ___PROJECTNAME___
//
//  Created by ___FULLUSERNAME___ on ___DATE___.
//  Copyright (c) ___YEAR___ ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects
//

import Foundation
import XCTest
@testable import ___PROJECTNAME___

final class ___VARIABLE_sceneName___TableViewCellTests: XCTestCase {

    // MARK: IBOutlets

    private var titleLabel: UILabel!
    private var button: UIButton!
    private var cell: ___VARIABLE_sceneName___TableViewCell!

    // MARK: Properties

    // swiftlint:disable:next weak_delegate
    private var delegate: Mock___VARIABLE_sceneName___TableViewCellDelegate!

    // MARK: Life Cycle

    override func setUp() {
        super.setUp()
        delegate = Mock___VARIABLE_sceneName___TableViewCellDelegate()

        let tableView = UITableView()
        tableView.register(cellType: ___VARIABLE_sceneName___TableViewCell.self)
        cell = tableView.dequeueReusableCell(for: IndexPath(row: 0, section: 0))
        configureOutlets()
    }

    override func tearDown() {
        super.tearDown()
    }

    private func configureOutlets() {
        titleLabel = cell.findView(forIdentifier: ___VARIABLE_sceneName___Accessibility.titleLabel.rawValue) as? UILabel
        button = cell.findView(forIdentifier: ___VARIABLE_sceneName___Accessibility.button.rawValue) as? UIButton
    }

}

// MARK: - Default Configuration

extension ___VARIABLE_sceneName___TableViewCellTests {

    func testDefaultConfiguration() {
        XCTAssertFalse(button.allTargets.isEmpty)
    }

}

// MARK: - Bind

extension ___VARIABLE_sceneName___TableViewCellTests {

    func testBind_loading() {
        cell.bind("title", delegate: delegate)
        XCTAssertEqual(titleLabel.text, "title")
    }

}

// MARK: - Actions

extension ___VARIABLE_sceneName___TableViewCellTests {

    func testButtonPressed() {
        let viewModel = ___VARIABLE_sceneName___.Models.ViewModel(isLoading: false)
        cell.bind("title", delegate: delegate)
        button.sendActions(for: .touchUpInside)
        XCTAssertTrue(delegate.didExecuteButton)
    }

}
